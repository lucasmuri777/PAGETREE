// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

model User {
  id                   Int      @id @default(autoincrement())
  email                String   @unique
  name                 String
  stripeId             String   @unique
  stripeSubscriptionId String?
  subscriptionStatus   String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  sites                Site[]
  images               Images[]
}

model Site {
  id          Int       @id @default(autoincrement())
  userId      Int
  title        String    @unique // Nome do site
  description String
  keywords String
  favicon        String? // URL da logo do site
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  sections    Section[]
}

model Section {
  id        Int      @id @default(autoincrement())
  siteId    Int
  type      String // Tipo da seção (ex.: 'header', 'banner', 'quemSomos', etc.)
  order     Int // Ordem de exibição no site
  content   Json? // Conteúdo dinâmico para a seção
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  site      Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)
}

model Images {
  id        Int      @id @default(autoincrement())
  userId    Int
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
